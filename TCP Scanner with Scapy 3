#!/usr/bin/env python3

# Script Name: TCP Port Scanner using ICMP Ping
# Author: Festus Oguhebe Jr. 

import sys
from scapy.all import sr1, IP, TCP, ICMP, sr, send
import random

# Function to perform port scanning
def scan_ports(host):
    port_range = [20, 21, 22, 23, 53, 69, 80, 123, 179, 264, 443, 520]
    print(f"\nScanning ports for {host}...")
    for port in port_range:
        src_port = random.randint(1024, 65535)
        response = sr1(IP(dst=host)/TCP(sport=src_port, dport=port, flags="S"), timeout=1, verbose=0)
        if response is None:
            print(f"Port {port} is filtered and silently dropped")
        elif response.haslayer(TCP):
            if response.getlayer(TCP).flags == 0x12:
                send(IP(dst=host)/TCP(sport=src_port, dport=port, flags="R"), verbose=0)
                print(f"Port {port} is open")
            elif response.getlayer(TCP).flags == 0x14:
                print(f"Port {port} is closed")

# Main function to perform ICMP Ping and then Port Scan if host is responsive
def main():
    target_ip = input("Enter the IP address to target: ")
    response = sr1(IP(dst=target_ip)/ICMP(), timeout=1, verbose=0)

    if response is None:
        print(f"Host {target_ip} is down or unresponsive.")
    elif response.haslayer(ICMP):
        if response.getlayer(ICMP).type == 0:  # Echo reply
            print(f"Host {target_ip} is responding. Proceeding with port scan...")
            scan_ports(target_ip)
        else:
            print(f"Host {target_ip} is not responsive to ICMP requests.")

if __name__ == "__main__":
    main()